const e=["name","type","notnull","dflt_value","pk"],{keys:t}=Object,n=(e,n,c)=>new Promise(((i,u)=>{const m=r(n),p=t(c);e.all(`PRAGMA table_info('${m}')`,((t,n)=>{const{length:f}=n,d=p.map(l,c),h=`tmp_${m}_backup`,E=`CREATE TABLE IF NOT EXISTS '${f?h:m}' (${o(d)})`;f?e.run(E,(t=>{t?u(t):e.all(`PRAGMA table_info('${h}')`,((t,l)=>{if(n.length!==l.length||n.some(a,l)){const t=n.filter(s,l).map((e=>`'${r(e.name)}'`)),a=t.map((e=>`'${m}'.${e}`));e.run(`INSERT INTO '${h}' (${o(t)})\n                      SELECT ${o(a)} FROM '${m}'`,(t=>{t?e.run(`DROP TABLE IF EXISTS '${h}'`,(()=>u(t))):e.run(`DROP TABLE IF EXISTS '${m}'`,(()=>{e.run(`ALTER TABLE '${h}' RENAME TO '${m}'`,i)}))}))}else e.run(`DROP TABLE IF EXISTS '${h}'`,i)}))})):e.run(E,(e=>{e?u(e):i()}))}))})),r=e=>e.replace(/'/g,"''"),o=e=>e.join(", ");function s(e){return-1<this.findIndex((({name:t})=>t===e.name))}function l(e){return`'${r(e)}' ${this[e]}`}function a(t,n){const r=this[n];return e.some((e=>t[e]!==r[e]))}const c=(e,r)=>e(r).then((e=>r.tables?((e,r)=>new Promise(((o,s)=>{const l=[];for(const o of t(r))l.push(n(e,o,r[o]));Promise.all(l).then(o,s)})))((({all:e,query:t})=>({all(t,n){e([t]).then((e=>n(null,e)),n)},run(e,n){t([e]).then((()=>n()),n)}}))(e),r.tables).then((()=>e)):e));function i(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}const u=new WeakMap,m=(e,...t)=>{const{t:n,v:r}=p(e,t),o=u.get(e)||u.set(e,{}).get(e);return(o[n]||(o[n]=[n])).concat(r.map((e=>t[e])))},p=(e,t)=>{const n=[e[0]],r=[];for(let o=0,s=0,l=0,{length:a}=t;s<a;s++)t[s]instanceof d?n[o]+=t[s].v+e[s+1]:(r[l++]=s,n[++o]=e[s+1]);return{t:n,v:r}},f=e=>new d(e);function d(e){this.v=e}const{defineProperty:h}=Object,E=(e,t)=>(n,...r)=>new Promise(((o,s)=>{if(n.some((e=>e.includes("?")))){const e=new Error("SQLITE_ERROR: SQL injection hazard");e.code="SQLITE_ERROR",s(e)}else{const[l,...a]=m(n,...r);e[t](l.join("?"),a,((e,t)=>{e?s(e):o(t)}))}}));const{assign:T}=Object,g="function"==typeof importScripts,w=g?".":import.meta.url.replace(/\/[^/]*$/,""),b=e=>new Promise(((t,n)=>{const r=()=>{const e=self.module.exports;delete self.exports,self.module=void 0,t(e)};if(self.exports={},self.module={exports:exports},g)importScripts(e),r();else{const{head:t}=document;T(t.appendChild(document.createElement("script")),{onload(){t.removeChild(this),r()},onerror:n,src:e})}})),I=(e,t=1)=>new Promise(((n,r)=>{T(indexedDB.open(e,t),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.contains("sqlite")||e.createObjectStore("sqlite").createIndex("buffer","buffer",{unique:!0}),T(t,{oncomplete(){n(e)}})},onsuccess({target:{result:e}}){n(e)},onerror:r})})),S=(e={})=>new Promise(((t,n)=>{const r=e.dist||w;b(r+"/sql-wasm.js").then((({default:o})=>{Promise.all([I(e.name||"sqlite-worker"),o({locateFile:e=>r+"/"+e})]).then((([r,{Database:o}])=>{const s=e=>r.transaction(["sqlite"],e).objectStore("sqlite");T(s("readonly").get("buffer"),{onsuccess(){let n=Promise.resolve();const{result:r}=this,l=new o(r||e.database||new Uint8Array(0)),a=()=>{n=n.then((()=>new Promise(((t,n)=>{const r=l.export();T(s("readwrite").put(r,"buffer").transaction,{oncomplete(){t(),e.update&&e.update(r)},onabort:n,onerror:n})}))))};r||a();const{all:c,get:u,query:m,raw:p,transaction:d}=function(e){const t=E(e,"run");return{transaction(){let e=t(["BEGIN TRANSACTION"]);return h(((...n)=>{e=e.then((()=>t(...n)))}),"commit",{value:()=>e=e.then((()=>t(["COMMIT"])))})},all:E(e,"all"),get:E(e,"get"),raw:(e,...t)=>f(i(e,...t)),query:t}}({all(e,t,n){try{const r=l.exec(e,t),o=[];r.forEach(R,o),n(null,o)}catch(e){n(e)}},get(e,t,n){try{const r=l.exec(e+" LIMIT 1",t),o=[];r.forEach(R,o),n(null,o.shift()||null)}catch(e){n(e)}},run(e,t,n){try{n(null,l.run(e,t))}catch(e){n(e)}}});let g=0;t({all:c,get:u,raw:p,transaction:d,query(t){return/\b(?:INSERT|DELETE|UPDATE)\b/i.test(t[0])&&(clearTimeout(g),g=setTimeout(a,e.timeout||250)),m.apply(this,arguments)}})},onerror:n})}),n)}))}));function R({columns:e,values:t}){for(let{length:n}=t,r=0;r<n;r++){const n=t[r],o={};for(let{length:t}=e,r=0;r<t;r++)o[e[r]]=n[r];this.push(o)}}const $=(e={})=>c(S,e),{defineProperty:y}=Object,O=new Map,P=(e,...t)=>f(i(e,...t));let A=0;function j(e={}){const{credentials:t}=e,n=e.dist||w,r=e.worker||n+"/worker.js",o=e=>(t,...n)=>{const[r,...o]=m(t,...n);return s(e,{template:r,values:o})},s=(e,t)=>new Promise(((n,r)=>{const o=A++;O.set(o,{resolve:n,reject:r}),l.postMessage({id:o,action:e,options:t})})),l=T(new Worker(/^(?:\.|\/)/.test(r)?r:(e=>URL.createObjectURL(new Blob([`importScripts('${e}')`],{type:"text/javascript"})))(r),{credentials:t}),{onmessage({data:{id:e,result:t,error:n}}){const{resolve:r,reject:o}=O.get(e);O.delete(e),n?o(n):r(t)}}),a=o("query");return s("init",T({dist:n,library:n+"/init.js"},e)).then((()=>({transaction(){let e=a(["BEGIN TRANSACTION"]);return y(((...t)=>{e=e.then((()=>a(...t)))}),"commit",{value:()=>e=e.then((()=>a(["COMMIT"])))})},all:o("all"),get:o("get"),query:a,raw:P})))}function v(e={}){return c(j,e)}export{v as SQLiteWorker,$ as init};
