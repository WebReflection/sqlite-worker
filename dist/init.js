const e=new WeakMap,t=(e,t)=>{const r=[e[0]],o=[];for(let s=0,c=0,a=0,{length:l}=t;c<l;c++)t[c]instanceof n?r[s]+=t[c].v+e[c+1]:(o[a++]=c,r[++s]=e[c+1]);return{t:r,v:o}};function n(e){this.v=e}const{defineProperty:r}=Object,o=(n,r)=>(o,...s)=>new Promise(((c,a)=>{if(o.some((e=>e.includes("?")))){const e=new Error("SQLITE_ERROR: SQL injection hazard");e.code="SQLITE_ERROR",a(e)}else{const[l,...i]=((n,...r)=>{const{t:o,v:s}=t(n,r),c=e.get(n)||e.set(n,{}).get(n);return(c[o]||(c[o]=[o])).concat(s.map((e=>r[e])))})(o,...s);n[r](l.join("?"),i,((e,t)=>{e?a(e):c(t)}))}}));function s(e){const t=o(e,"run");return{transaction(){let e=t(["BEGIN TRANSACTION"]);return r(((...n)=>{e=e.then((()=>t(...n)))}),"commit",{value:()=>e=e.then((()=>t(["COMMIT"])))})},all:o(e,"all"),get:o(e,"get"),raw:(e,...t)=>{return r=function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(e,...t),new n(r);var r},query:t}}const{assign:c}=Object,a="function"==typeof importScripts,l=e=>new Promise(((t,n)=>{const r=()=>{const e=self.module.exports;delete self.exports,self.module=void 0,t(e)};if(self.exports={},self.module={exports:exports},a)importScripts(e),r();else{const{head:t}=document;c(t.appendChild(document.createElement("script")),{onload(){t.removeChild(this),r()},onerror:n,src:e})}})),i=(e,t=1)=>new Promise(((n,r)=>{c(indexedDB.open(e,t),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.contains("sqlite")||e.createObjectStore("sqlite").createIndex("buffer","buffer",{unique:!0}),c(t,{oncomplete(){n(e)}})},onsuccess({target:{result:e}}){n(e)},onerror:r})}));function u({columns:e,values:t}){for(let{length:n}=t,r=0;r<n;r++){const n=t[r],o={};for(let{length:t}=e,r=0;r<t;r++)o[e[r]]=n[r];this.push(o)}}exports.init=(e={})=>new Promise(((t,n)=>{const r=e.dist||".";l(r+"/sql-wasm.js").then((({default:o})=>{Promise.all([i(e.name||"sqlite-worker"),o({locateFile:e=>r+"/"+e})]).then((([r,{Database:o}])=>{const a=e=>r.transaction(["sqlite"],e).objectStore("sqlite");c(a("readonly").get("buffer"),{onsuccess(){let n=Promise.resolve();const{result:r}=this,l=new o(r||e.database||new Uint8Array(0)),i=()=>{n=n.then((()=>new Promise(((t,n)=>{const r=l.export();c(a("readwrite").put(r,"buffer").transaction,{oncomplete(){t(),e.update&&e.update(r)},onabort:n,onerror:n})}))))};r||i();const{all:f,get:d,query:m,raw:p,transaction:h}=s({all(e,t,n){try{const r=l.exec(e,t),o=[];r.forEach(u,o),n(null,o)}catch(e){n(e)}},get(e,t,n){try{const r=l.exec(e+" LIMIT 1",t),o=[];r.forEach(u,o),n(null,o.shift()||null)}catch(e){n(e)}},run(e,t,n){try{n(null,l.run(e,t))}catch(e){n(e)}}});let g=0;t({all:f,get:d,raw:p,transaction:h,query(t){return/\b(?:INSERT|DELETE|UPDATE)\b/i.test(t[0])&&(clearTimeout(g),g=setTimeout(i,e.timeout||250)),m.apply(this,arguments)}})},onerror:n})}),n)}))}));